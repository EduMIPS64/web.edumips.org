"use strict";(self.webpackChunkedumips64_webui=self.webpackChunkedumips64_webui||[]).push([[376],{9376:(t,e,n)=>{n.r(e),n.d(e,{encodeSemanticTokensDto:()=>s});var a=n(2802),l=n(3339);function s(t){const e=new Uint32Array(function(t){let e=0;if(e+=2,"full"===t.type)e+=1+t.data.length;else{e+=1,e+=3*t.deltas.length;for(const n of t.deltas)n.data&&(e+=n.data.length)}return e}(t));let n=0;if(e[n++]=t.id,"full"===t.type)e[n++]=1,e[n++]=t.data.length,e.set(t.data,n),n+=t.data.length;else{e[n++]=2,e[n++]=t.deltas.length;for(const a of t.deltas)e[n++]=a.start,e[n++]=a.deleteCount,a.data?(e[n++]=a.data.length,e.set(a.data,n),n+=a.data.length):e[n++]=0}return function(t){const e=new Uint8Array(t.buffer,t.byteOffset,4*t.length);return l.cm()||function(t){for(let e=0,n=t.length;e<n;e+=4){const n=t[e+0],a=t[e+1],l=t[e+2],s=t[e+3];t[e+0]=s,t[e+1]=l,t[e+2]=a,t[e+3]=n}}(e),a.MB.wrap(e)}(e)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzc2LnVpLmpzIiwibWFwcGluZ3MiOiJ1TEEyQk8sU0FBU0EsRUFBd0JDLEdBQ3BDLE1BQU1DLEVBQU8sSUFBSUMsWUEyQnJCLFNBQXFDRixHQUNqQyxJQUFJRyxFQUFTLEVBSWIsR0FIQUEsR0FBVSxFQUdrQixTQUF4QkgsRUFBZUksS0FDZkQsR0FBVyxFQUNMSCxFQUFlSyxLQUFLQyxXQUV6QixDQUNESCxHQUFVLEVBRVZBLEdBQVUsRUFHTkgsRUFBZU8sT0FBT0QsT0FDMUIsSUFBSyxNQUFNRSxLQUFTUixFQUFlTyxPQUMzQkMsRUFBTUgsT0FDTkYsR0FBVUssRUFBTUgsS0FBS0MsT0FHakMsQ0FDQSxPQUFPSCxDQUNYLENBbERpQ00sQ0FBNEJULElBQ3pELElBQUlVLEVBQVMsRUFFYixHQURBVCxFQUFLUyxLQUFZVixFQUFlVyxHQUNKLFNBQXhCWCxFQUFlSSxLQUNmSCxFQUFLUyxLQUFZLEVBQ2pCVCxFQUFLUyxLQUFZVixFQUFlSyxLQUFLQyxPQUNyQ0wsRUFBS1csSUFBSVosRUFBZUssS0FBTUssR0FDOUJBLEdBQVVWLEVBQWVLLEtBQUtDLFdBRTdCLENBQ0RMLEVBQUtTLEtBQVksRUFDakJULEVBQUtTLEtBQVlWLEVBQWVPLE9BQU9ELE9BQ3ZDLElBQUssTUFBTUUsS0FBU1IsRUFBZU8sT0FDL0JOLEVBQUtTLEtBQVlGLEVBQU1LLE1BQ3ZCWixFQUFLUyxLQUFZRixFQUFNTSxZQUNuQk4sRUFBTUgsTUFDTkosRUFBS1MsS0FBWUYsRUFBTUgsS0FBS0MsT0FDNUJMLEVBQUtXLElBQUlKLEVBQU1ILEtBQU1LLEdBQ3JCQSxHQUFVRixFQUFNSCxLQUFLQyxRQUdyQkwsRUFBS1MsS0FBWSxDQUc3QixDQUNBLE9BbENKLFNBQThCSyxHQUMxQixNQUFNQyxFQUFXLElBQUlDLFdBQVdGLEVBQUlHLE9BQVFILEVBQUlJLFdBQXlCLEVBQWJKLEVBQUlULFFBS2hFLE9BSkssUUFmVCxTQUEyQlMsR0FDdkIsSUFBSyxJQUFJSyxFQUFJLEVBQUdDLEVBQU1OLEVBQUlULE9BQVFjLEVBQUlDLEVBQUtELEdBQUssRUFBRyxDQUUvQyxNQUFNRSxFQUFLUCxFQUFJSyxFQUFJLEdBQ2JHLEVBQUtSLEVBQUlLLEVBQUksR0FDYkksRUFBS1QsRUFBSUssRUFBSSxHQUNiSyxFQUFLVixFQUFJSyxFQUFJLEdBQ25CTCxFQUFJSyxFQUFJLEdBQUtLLEVBQ2JWLEVBQUlLLEVBQUksR0FBS0ksRUFDYlQsRUFBSUssRUFBSSxHQUFLRyxFQUNiUixFQUFJSyxFQUFJLEdBQUtFLENBQ2pCLENBQ0osQ0FLUUksQ0FBa0JWLEdBRWYsS0FBU1csS0FBS1gsRUFDekIsQ0EyQldZLENBQXFCM0IsRUFDaEMsQyIsInNvdXJjZXMiOlsid2VicGFjazovL2VkdW1pcHM2NC13ZWJ1aS8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9lZGl0b3IvY29tbW9uL3NlcnZpY2VzL3NlbWFudGljVG9rZW5zRHRvLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgVlNCdWZmZXIgfSBmcm9tICcuLi8uLi8uLi9iYXNlL2NvbW1vbi9idWZmZXIuanMnO1xuaW1wb3J0ICogYXMgcGxhdGZvcm0gZnJvbSAnLi4vLi4vLi4vYmFzZS9jb21tb24vcGxhdGZvcm0uanMnO1xuZnVuY3Rpb24gcmV2ZXJzZUVuZGlhbm5lc3MoYXJyKSB7XG4gICAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IGFyci5sZW5ndGg7IGkgPCBsZW47IGkgKz0gNCkge1xuICAgICAgICAvLyBmbGlwIGJ5dGVzIDA8LT4zIGFuZCAxPC0+MlxuICAgICAgICBjb25zdCBiMCA9IGFycltpICsgMF07XG4gICAgICAgIGNvbnN0IGIxID0gYXJyW2kgKyAxXTtcbiAgICAgICAgY29uc3QgYjIgPSBhcnJbaSArIDJdO1xuICAgICAgICBjb25zdCBiMyA9IGFycltpICsgM107XG4gICAgICAgIGFycltpICsgMF0gPSBiMztcbiAgICAgICAgYXJyW2kgKyAxXSA9IGIyO1xuICAgICAgICBhcnJbaSArIDJdID0gYjE7XG4gICAgICAgIGFycltpICsgM10gPSBiMDtcbiAgICB9XG59XG5mdW5jdGlvbiB0b0xpdHRsZUVuZGlhbkJ1ZmZlcihhcnIpIHtcbiAgICBjb25zdCB1aW50OEFyciA9IG5ldyBVaW50OEFycmF5KGFyci5idWZmZXIsIGFyci5ieXRlT2Zmc2V0LCBhcnIubGVuZ3RoICogNCk7XG4gICAgaWYgKCFwbGF0Zm9ybS5pc0xpdHRsZUVuZGlhbigpKSB7XG4gICAgICAgIC8vIHRoZSBieXRlIG9yZGVyIG11c3QgYmUgY2hhbmdlZFxuICAgICAgICByZXZlcnNlRW5kaWFubmVzcyh1aW50OEFycik7XG4gICAgfVxuICAgIHJldHVybiBWU0J1ZmZlci53cmFwKHVpbnQ4QXJyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVTZW1hbnRpY1Rva2Vuc0R0byhzZW1hbnRpY1Rva2Vucykge1xuICAgIGNvbnN0IGRlc3QgPSBuZXcgVWludDMyQXJyYXkoZW5jb2RlU2VtYW50aWNUb2tlbnNEdG9TaXplKHNlbWFudGljVG9rZW5zKSk7XG4gICAgbGV0IG9mZnNldCA9IDA7XG4gICAgZGVzdFtvZmZzZXQrK10gPSBzZW1hbnRpY1Rva2Vucy5pZDtcbiAgICBpZiAoc2VtYW50aWNUb2tlbnMudHlwZSA9PT0gJ2Z1bGwnKSB7XG4gICAgICAgIGRlc3Rbb2Zmc2V0KytdID0gMSAvKiBFbmNvZGVkU2VtYW50aWNUb2tlbnNUeXBlLkZ1bGwgKi87XG4gICAgICAgIGRlc3Rbb2Zmc2V0KytdID0gc2VtYW50aWNUb2tlbnMuZGF0YS5sZW5ndGg7XG4gICAgICAgIGRlc3Quc2V0KHNlbWFudGljVG9rZW5zLmRhdGEsIG9mZnNldCk7XG4gICAgICAgIG9mZnNldCArPSBzZW1hbnRpY1Rva2Vucy5kYXRhLmxlbmd0aDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGRlc3Rbb2Zmc2V0KytdID0gMiAvKiBFbmNvZGVkU2VtYW50aWNUb2tlbnNUeXBlLkRlbHRhICovO1xuICAgICAgICBkZXN0W29mZnNldCsrXSA9IHNlbWFudGljVG9rZW5zLmRlbHRhcy5sZW5ndGg7XG4gICAgICAgIGZvciAoY29uc3QgZGVsdGEgb2Ygc2VtYW50aWNUb2tlbnMuZGVsdGFzKSB7XG4gICAgICAgICAgICBkZXN0W29mZnNldCsrXSA9IGRlbHRhLnN0YXJ0O1xuICAgICAgICAgICAgZGVzdFtvZmZzZXQrK10gPSBkZWx0YS5kZWxldGVDb3VudDtcbiAgICAgICAgICAgIGlmIChkZWx0YS5kYXRhKSB7XG4gICAgICAgICAgICAgICAgZGVzdFtvZmZzZXQrK10gPSBkZWx0YS5kYXRhLmxlbmd0aDtcbiAgICAgICAgICAgICAgICBkZXN0LnNldChkZWx0YS5kYXRhLCBvZmZzZXQpO1xuICAgICAgICAgICAgICAgIG9mZnNldCArPSBkZWx0YS5kYXRhLmxlbmd0aDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGRlc3Rbb2Zmc2V0KytdID0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdG9MaXR0bGVFbmRpYW5CdWZmZXIoZGVzdCk7XG59XG5mdW5jdGlvbiBlbmNvZGVTZW1hbnRpY1Rva2Vuc0R0b1NpemUoc2VtYW50aWNUb2tlbnMpIHtcbiAgICBsZXQgcmVzdWx0ID0gMDtcbiAgICByZXN1bHQgKz0gKCsxIC8vIGlkXG4gICAgICAgICsgMSAvLyB0eXBlXG4gICAgKTtcbiAgICBpZiAoc2VtYW50aWNUb2tlbnMudHlwZSA9PT0gJ2Z1bGwnKSB7XG4gICAgICAgIHJlc3VsdCArPSAoKzEgLy8gZGF0YSBsZW5ndGhcbiAgICAgICAgICAgICsgc2VtYW50aWNUb2tlbnMuZGF0YS5sZW5ndGgpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmVzdWx0ICs9ICgrMSAvLyBkZWx0YSBjb3VudFxuICAgICAgICApO1xuICAgICAgICByZXN1bHQgKz0gKCsxIC8vIHN0YXJ0XG4gICAgICAgICAgICArIDEgLy8gZGVsZXRlQ291bnRcbiAgICAgICAgICAgICsgMSAvLyBkYXRhIGxlbmd0aFxuICAgICAgICApICogc2VtYW50aWNUb2tlbnMuZGVsdGFzLmxlbmd0aDtcbiAgICAgICAgZm9yIChjb25zdCBkZWx0YSBvZiBzZW1hbnRpY1Rva2Vucy5kZWx0YXMpIHtcbiAgICAgICAgICAgIGlmIChkZWx0YS5kYXRhKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ICs9IGRlbHRhLmRhdGEubGVuZ3RoO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4iXSwibmFtZXMiOlsiZW5jb2RlU2VtYW50aWNUb2tlbnNEdG8iLCJzZW1hbnRpY1Rva2VucyIsImRlc3QiLCJVaW50MzJBcnJheSIsInJlc3VsdCIsInR5cGUiLCJkYXRhIiwibGVuZ3RoIiwiZGVsdGFzIiwiZGVsdGEiLCJlbmNvZGVTZW1hbnRpY1Rva2Vuc0R0b1NpemUiLCJvZmZzZXQiLCJpZCIsInNldCIsInN0YXJ0IiwiZGVsZXRlQ291bnQiLCJhcnIiLCJ1aW50OEFyciIsIlVpbnQ4QXJyYXkiLCJidWZmZXIiLCJieXRlT2Zmc2V0IiwiaSIsImxlbiIsImIwIiwiYjEiLCJiMiIsImIzIiwicmV2ZXJzZUVuZGlhbm5lc3MiLCJ3cmFwIiwidG9MaXR0bGVFbmRpYW5CdWZmZXIiXSwic291cmNlUm9vdCI6IiJ9